<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd">
	<sub-flow name="post-employees-advanced-search" doc:id="e966fbde-f224-4955-94a4-7a4a80a98d48" >
		<flow-ref doc:name="Login" doc:id="95a83d16-732c-49ea-8ceb-a980e6bcb34a" name="compound-employee-login" />
		<choice doc:name="QuerySessionId empty ?" doc:id="cca31d63-51ba-4eae-b0bd-9afcad53518d">
			<when expression="#[!isEmpty(vars.querySessionId)]">
				<ee:transform doc:name="queryMore body" doc:id="26e04a1c-47ee-47be-b2d7-e530d95c9930">
			<ee:message>
				<ee:set-payload resource="dwl/getEmployeesUpdate/queryMoreBody.dwl" />
			</ee:message>
			<ee:variables />
		</ee:transform>
				<json-logger:logger doc:name="Before Querymore Request" doc:id="c3195a05-0360-4d31-90e2-c9f685d13f46" config-ref="JSON_Logger_Config" message="Before Querymore Request" tracePoint="AFTER_REQUEST" priority="DEBUG" category="com.louisvuitton.technical">
			<json-logger:content><![CDATA[#[import modules::JSONLoggerModule output application/json indent = false ---
{
    payload: JSONLoggerModule::stringifyNonJSON(payload) 
}]]]></json-logger:content>
		</json-logger:logger>
				<wsc:consume operation="queryMore" doc:name="queryMore CompoundEmployee" doc:id="f8be36d7-9597-4aab-933a-59ff90b6a900" config-ref="successfactors-ws-consumer-config-operations">
			<wsc:transport-headers>
				<wsc:transport-header key="Cookie" value='#["JSESSIONID=" ++ (vars.loginSessionId) as String]' />
			</wsc:transport-headers>
		</wsc:consume>
				<json-logger:logger doc:name="After Querymore Request" doc:id="b1392ece-df49-446e-8aa7-3810bf9a0c0f" config-ref="JSON_Logger_Config" message="After Querymore Request" tracePoint="AFTER_REQUEST" priority="DEBUG" category="com.louisvuitton.technical">
			<json-logger:content><![CDATA[#[import modules::JSONLoggerModule output application/json indent = false ---
{
    payload: JSONLoggerModule::stringifyNonJSON(payload) 
}]]]></json-logger:content>
		</json-logger:logger>
					</when>
			<otherwise>
				<ee:transform doc:name="Set Condition, queryParamList &amp; query" doc:id="709b4550-1ed2-41eb-9920-5bd8306b8fdb">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="condition"><![CDATA[%dw 2.0
output application/json indent = false
fun formatDate(date) = date as DateTime as String {format: "yyyy-MM-dd"} as Date default ""
fun valueFormat(field, val) = 
    if(field == "LAST_MODIFIED_ON") 
        "to_datetime('"++ val ++ "')" 
    else if (["START_DATE", "SELECTFROMDATE", "SELECTTODATE", "EFFECTIVE_END_DATE"] contains upper(field))
        "to_date('" ++ formatDate(val) ++ "', 'YYYY-MM-DD')"
    else
        val
var currentDate = formatDate(now())
---
payload.inputFilters map ((item, index) -> item.field ++ " " ++ item.condition ++ " " ++ if(item.value != null) valueFormat(item.field, item.value)  else  "('" ++ (item.values joinBy "','") ++ "')") joinBy  " and "



]]></ee:set-variable>
				<ee:set-variable variableName="query"><![CDATA[%dw 2.0
output application/json indent = false
---
if(payload.queryString != null)  payload.queryString joinBy  " ," else payload.outputSegments joinBy  ","]]></ee:set-variable>
				<ee:set-variable variableName="queryParamsList"><![CDATA[%dw 2.0
output application/json indent = false
---
if(payload.queryParam != null) payload.queryParam else payload.technicalParameters pluck ((value, key, index) -> key ++ "=" ++ value )

]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<ee:transform doc:name="Build Query, set queryResult" doc:id="b0f4a8b4-d8f3-4023-878b-e9a5b7c5532f">
			<ee:message>
				<ee:set-payload resource="dwl/getEmployeesUpdate/buildQueryEmployees.dwl" />
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="queryResult"><![CDATA[%dw 2.0
output application/json indent = false
---
[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<json-logger:logger doc:name="Before Query CompoundEmployee" doc:id="bab83df3-0415-40f7-8e8b-ebb7d9dcc17e" config-ref="JSON_Logger_Config" message="Before Query CompoundEmployee" tracePoint="AFTER_REQUEST" priority="DEBUG" category="com.louisvuitton.technical">
			<json-logger:content><![CDATA[#[import modules::JSONLoggerModule output application/json indent = false ---
{
    payload: JSONLoggerModule::stringifyNonJSON(payload) 
}]]]></json-logger:content>
		</json-logger:logger>
				<wsc:consume operation="query" doc:name="Query CompoundEmployee" doc:id="b073e3ea-041f-4d74-8512-2960dcac4d20" config-ref="successfactors-ws-consumer-config-operations">
			<wsc:transport-headers>
				<wsc:transport-header key="Cookie" value='#["JSESSIONID=" ++ (vars.loginSessionId) as String]' />
			</wsc:transport-headers>
		</wsc:consume>
				<json-logger:logger doc:name="After Query CompoundEmploye" doc:id="ff117c7c-80cf-4a49-abb0-e8ed8e8b1ef8" config-ref="JSON_Logger_Config" message="After Query CompoundEmploye" tracePoint="AFTER_REQUEST" priority="DEBUG" category="com.louisvuitton.technical">
			<json-logger:content><![CDATA[#[import modules::JSONLoggerModule output application/json indent = false ---
{
    payload: JSONLoggerModule::stringifyNonJSON(payload) 
}]]]></json-logger:content>
		</json-logger:logger>
					</otherwise>
				</choice>
		<ee:transform doc:name="Remove duplicate key" doc:id="c3852e36-02f0-4325-8f72-8feb1dbddfbc" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json duplicateKeyAsArray=true
var person = payload..*sfobject.*person 

---
payload
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="Set Response" doc:id="ad7ed45b-5427-41ec-bbbc-fd615e5faadd">
							<ee:message>
				<ee:set-payload resource="dwl/getEmployeesSearchAdvanced/buildQueryEmployees/employeeJSONResponse.dwl" />
							</ee:message>
						</ee:transform>
		<json-logger:logger doc:name="Final response " doc:id="7c437c73-aca7-4e4d-84d6-2af71a124a64" config-ref="JSON_Logger_Config" message="Final response " tracePoint="AFTER_REQUEST" priority="DEBUG" category="com.louisvuitton.technical">
			<json-logger:content><![CDATA[#[import modules::JSONLoggerModule output application/json indent = false ---
{
    payload: JSONLoggerModule::stringifyNonJSON(payload) 
}]]]></json-logger:content>
		</json-logger:logger>
	</sub-flow>
</mule>
